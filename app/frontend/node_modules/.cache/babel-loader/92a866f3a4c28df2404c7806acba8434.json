{"ast":null,"code":"import axios from 'axios';\n\nlet langs = require('../data/lang.js');\n\nlet assessmentMethods = require('../data/assessment.js');\n\nlet moduleTypes = require('../data/type.js');\n\nlet locations = require('../data/location.js');\n\nlet seasons = require('../data/season.js');\n\nlet status_file = require('../data/status.js');\n\nlet persons = require('../data/person.js');\n\nlet courses = require('../data/courses.js');\n\nlet pos = require('../data/po.js');\n\nexport default {\n  data() {\n    return {\n      assessment_method_list: assessmentMethods,\n      lang_list: langs,\n      module_types_list: moduleTypes,\n      location_list: locations,\n      status_list: status_file,\n      person_list: persons,\n      course_list: courses,\n      seasons_list: seasons,\n      po_list: pos,\n      course: {\n        module_code: '',\n        module_title: '',\n        module_abbrev: '',\n        credit_points: '',\n        language: '',\n        assessment_method: '',\n        module_type: '',\n        location: '',\n        season: '',\n        //status\n        status: '',\n        duration_of_module: '',\n        recommended_semester: '',\n        //person\n        coordinators_list: [],\n        lecturers_list: [],\n        //courses\n        required_prerequisites_list: [],\n        recommended_prerequisites_list: [],\n        //pos\n        po: [],\n        //integers\n        workload: '',\n        lecture: '',\n        seminar: '',\n        practical: '',\n        self_study: '',\n        excersice: '',\n        further_information: '',\n        frequency: '',\n        linebreak: ''\n      }\n    };\n  },\n\n  methods: {\n    inputHandler(e) {\n      if (e.keyCode === 13 && !e.shiftKey) {\n        e.preventDefault();\n        this.handleSubmit();\n      }\n    },\n\n    handleSubmit() {\n      console.log(this.course);\n      this.createCourse();\n    },\n\n    async createCourse() {\n      this.course.recommended_prerequisites_list.forEach((item, i, self) => self[i] = ' module.' + item);\n      this.course.recommended_prerequisites = JSON.stringify(this.course.recommended_prerequisites_list);\n      this.course.required_prerequisites_list.forEach((item, i, self) => self[i] = '- module.' + item);\n      this.course.required_prerequisites = JSON.stringify(this.course.required_prerequisites_list);\n      this.course.lecturers_list.forEach((item, i, self) => self[i] = 'person.' + item);\n      this.course.lecturers = JSON.stringify(this.course.lecturers_list);\n      this.course.coordinators_list.forEach((item, i, self) => self[i] = 'person.' + item);\n      this.course.coordinators = JSON.stringify(this.course.coordinators_list);\n      this.further_information = this.further_information + '---';\n      this.course.status = 'status.' + this.course.status;\n      this.course.location = 'location.' + this.course.location;\n      this.course.module_abbrev = this.course.module_abbrev.toUpperCase();\n      this.course.module_type = 'module_type.' + this.course.module_type;\n      this.course.language = 'lang.' + this.course.language;\n      this.course.frequency = 'season.' + this.course.frequency;\n      this.course.assessment_method + 'aassessment.' + this.course.assessment_method;\n      this.course.linebreak = '---'; //removes last comma from po array\n\n      for (let i = 0; i < this.course.po.length; i++) {\n        if (i + 1 == this.course.po.length) {\n          this.course.po[i] = this.course.po[i].replace(',', '');\n        }\n      }\n\n      this.course.po_list = JSON.stringify(this.course.po); //swap out url \n\n      axios.post(\"http://127.0.0.1:8000/api/courses/\", this.course).then(res => this.courses.push(res.data)).catch(err => console.log(err));\n      console.log(this.courses);\n      alert(\"Kurs wurde erstellt \" + this.course.module_code);\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","langs","require","assessmentMethods","moduleTypes","locations","seasons","status_file","persons","courses","pos","data","assessment_method_list","lang_list","module_types_list","location_list","status_list","person_list","course_list","seasons_list","po_list","course","module_code","module_title","module_abbrev","credit_points","language","assessment_method","module_type","location","season","status","duration_of_module","recommended_semester","coordinators_list","lecturers_list","required_prerequisites_list","recommended_prerequisites_list","po","workload","lecture","seminar","practical","self_study","excersice","further_information","frequency","linebreak","methods","inputHandler","e","keyCode","shiftKey","preventDefault","handleSubmit","console","log","createCourse","forEach","item","i","self","recommended_prerequisites","JSON","stringify","required_prerequisites","lecturers","coordinators","toUpperCase","length","replace","post","then","res","push","catch","err","alert"],"sourceRoot":"","sources":["/Users/Paul_1/Desktop/Th/Projekte/Informatikprojekt/InformatikprojektWvueCLI&Router/app/frontend/src/components/ModuleForm.vue"],"sourcesContent":["\n<template>\n    <form @submit.prevent=\"handleSubmit\">\n        <label>module_code</label>\n        <input type=\"module_code\" v-model=\"course.module_code\" placeholder=\"UUID\">\n\n        <label>module_title</label>\n        <input type=\"module_title\" v-model=\"course.module_title\" placeholder=\"Algorithmik\">\n\n        <label>module_abbrev</label>\n        <input type=\"module_abbrev\" v-model=\"course.module_abbrev\" placeholder=\"ALG\">\n\n        <label>module_type</label>\n        <select v-model=\"course.module_type\">\n            <option :value=\"type.type\" v-for=\"(type) in module_types_list\" :key=\"type.type\">{{type.type}}</option>\n        </select>\n\n        <label>credit_points</label>\n        <input type=\"credit_points\" v-model=\"course.credit_points\" placeholder=\"5\">\n\n        <label>language</label>\n        <select v-model=\"course.language\">\n            <option :value=\"lang.lang\" v-for=\"(lang) in lang_list\" :key=\"lang.lang\">{{lang.lang}}</option>\n        </select>\n        \n\n        <label>duration_of_module</label>\n        <input type=\"duration_of_module\" v-model=\"course.duration_of_module\" placeholder=\"1\">\n\n        <label>recommended_semester</label>\n        <select v-model=\"course.recommended_semester\">\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n            <option value=\"5\">5</option>\n            <option value=\"6\">6</option>\n        </select>\n        \n        <label>frequency</label>\n        <select v-model=\"course.frequency\">\n            <option :value=\"season.season\" v-for=\"(season) in seasons_list\" :key=\"season.season\">{{season.season}}</option>\n        </select>\n\n        \n   \n\n             <p>responsibilities</p>\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th>coordinators</th>\n                    <th>lecturers</th>\n                </tr>\n            </thead>\n            <tbody>\n                  <tr v-for=\"(person) in person_list\" :key=\"person.person\">\n                    <td><input type=\"checkbox\" v-model=\"course.coordinators_list\" :value=\"person.person\"/>{{person.person}}</td>\n                    <td><input type=\"checkbox\" v-model=\"course.lecturers_list\" :value=\"person.person\"/>{{person.person}}</td>\n                    \n                </tr>\n            </tbody>\n              \n        </table>\n      \n\n        <label>assessment_method</label>\n        <select v-model=\"course.assessment_method\">\n            <option :value=\"assessment.assessment\" v-for=\"(assessment) in assessment_method_list\" :key=\"assessment.assessment\">{{assessment.assessment}}</option>\n        </select>\n       \n\n        <label>workload</label>\n        <input type=\"workload\" v-model=\"course.workload\" placeholder=\"150\">\n\n        <label>lecture</label>\n        <input type=\"lecture\" v-model=\"course.lecture\" placeholder=\"36\">\n\n        <label>seminar</label>\n        <input type=\"seminar\" v-model=\"course.seminar\" placeholder=\"0\">\n\n        <label>practical</label>\n        <input type=\"practical\" v-model=\"course.practical\" placeholder=\"18\">\n\n        <label>excersice</label>\n        <input type=\"excersice\" v-model=\"course.excersice\" placeholder=\"18\">\n\n        <label>self_study</label>\n        <input type=\"self_study\" v-model=\"course.self_study\" placeholder=\"78\">\n\n     \n       \n        <p>prerequisites (zur Mehrfachauswahl \"command\" oder \"strg\" Taste halten)</p>\n        <p>required </p>\n        <select name=\"courses\" id=\"required_prerequisites\" v-model=\"course.required_prerequisites_list\" multiple class=\"multi\">\n            <option v-for=\"(course) in course_list\" :key=\"course.course\">{{course.course}}</option>\n        </select>\n\n        <p>recommended</p>\n        <select name=\"courses\" id=\"required_prerequisites\" v-model=\"course.recommended_prerequisites_list\" multiple class=\"multi\">\n            <option v-for=\"(course) in course_list\" :key=\"course.course\">{{course.course}}</option>\n        </select>\n\n        <label>status</label>\n        <select v-model=\"course.status\">\n            <option :value=\"status.status\" v-for=\"(status) in status_list\" :key=\"status.status\">{{status.status}}</option>\n        </select>\n\n        <label>location</label>\n        <select v-model=\"course.location\">\n            <option :value=\"location.location\" v-for=\"(location) in location_list\" :key=\"location.location\">{{location.location}}</option>\n        </select>\n\n        <label>po</label>\n        <select v-model=\"course.po\" multiple>\n            <option :value=\"po.po\" v-for=\"(po) in po_list\" :key=\"po.po\">{{po.po}}</option>\n        </select>\n        <label>furtherInformation (Shift enter für Zeilen umbrüche)</label>\n        <br/>\n        <textarea v-model=\"course.further_information\" id=\"furtherInformation\" placeholder=\"Für Überschriften ein ## und ein Leerzeichen vor den Text hängen, bei Aufzählungen ein * und ein Leerzeichen\" @keydown=\"inputHandler\"></textarea>\n        <br>\n        <button >Modul hinzufügen bzw ändern</button>\n    </form>\n    \n    \n</template>\n\n<script>\nimport axios from 'axios';\n\n\nlet langs = require('../data/lang.js')\nlet assessmentMethods = require('../data/assessment.js')\nlet moduleTypes = require('../data/type.js')\nlet locations = require('../data/location.js')\nlet seasons = require('../data/season.js')\nlet status_file = require('../data/status.js')\nlet persons = require('../data/person.js')\nlet courses = require('../data/courses.js')\nlet pos = require('../data/po.js')\nexport default {\n    \n    data(){\n        return{\n\n            assessment_method_list: assessmentMethods,\n            lang_list: langs,\n            module_types_list: moduleTypes,\n            location_list: locations,\n            status_list: status_file,\n            person_list: persons,\n            course_list: courses,\n            seasons_list: seasons,\n            po_list: pos,\n            course:{\n            module_code:'',\n            module_title:'',\n            module_abbrev:'',\n            credit_points:'',\n            language:'',\n            assessment_method:'',\n            module_type:'',\n            location:'',\n            season:'',\n            //status\n            status:'',\n            duration_of_module:'',\n            recommended_semester:'',\n            //person\n            coordinators_list: [],\n            lecturers_list:[],\n            //courses\n            required_prerequisites_list:[],\n            recommended_prerequisites_list:[],\n            //pos\n            po:[],\n            //integers\n            workload:'',\n            lecture:'',\n            seminar:'',\n            practical:'',\n            self_study:'',\n            excersice:'',\n            further_information:'',\n            frequency:'',\n            linebreak:''\n        }\n    }\n\n    },\n\n    \n    methods:{\n        inputHandler(e) {\n      if (e.keyCode === 13 && !e.shiftKey) {\n        e.preventDefault();\n        this.handleSubmit();\n      }\n    },\n       handleSubmit(){\n        console.log(this.course)\n        this.createCourse()\n       },\n       async createCourse(){\n        this.course.recommended_prerequisites_list.forEach((item,i,self) => self[i] = ' module.'+item)\n        this.course.recommended_prerequisites = JSON.stringify(this.course.recommended_prerequisites_list)\n        this.course.required_prerequisites_list.forEach((item,i,self) => self[i] = '- module.'+item)\n        this.course.required_prerequisites = JSON.stringify(this.course.required_prerequisites_list)\n        this.course.lecturers_list.forEach((item,i,self) => self[i] = 'person.'+item)\n        this.course.lecturers = JSON.stringify(this.course.lecturers_list)\n        this.course.coordinators_list.forEach((item,i,self) => self[i] = 'person.'+item)\n        this.course.coordinators = JSON.stringify(this.course.coordinators_list)\n        this.further_information = this.further_information + '---'\n        this.course.status = 'status.' + this.course.status\n        this.course.location = 'location.' + this.course.location\n        this.course.module_abbrev = this.course.module_abbrev.toUpperCase()\n        this.course.module_type = 'module_type.' + this.course.module_type\n        this.course.language = 'lang.' + this.course.language\n        this.course.frequency = 'season.' + this.course.frequency\n        this.course.assessment_method + 'aassessment.' + this.course.assessment_method\n        this.course.linebreak = '---'\n        //removes last comma from po array\n        for (let i = 0; i < this.course.po.length;i++){\n            if((i+1) == (this.course.po.length)){\n                this.course.po[i] = this.course.po[i].replace(',','')\n            }\n        }\n        this.course.po_list = JSON.stringify(this.course.po)\n        //swap out url \n        axios.post(\"http://127.0.0.1:8000/api/courses/\",this.course)\n        .then(res => (this.courses.push(res.data)))\n        .catch(err => console.log(err))\n        console.log(this.courses)\n        alert(\"Kurs wurde erstellt \" + this.course.module_code)\n       }\n    }\n}\n</script>\n\n<style scoped>\n\ninput {\n    margin: 10px;\n    display: block;\n    width: 80%;\n}\n\nselect{\n    margin: 10px;\n    display: block;\n    width: 80.5%;\n}\n\n.multi{\n    height:900px;\n}\n\n#furtherInformation{\n        height: 200px;\n        width: 81%;\n}\n\n.table {\n    width:81%\n}\n\ntable, th, td {\n  border: 1px solid black;\n  border-collapse: collapse;\n}\nth, td {\n  padding: 5px;\n  text-align: left;\n}\n\n\n\n</style>\n"]},"metadata":{},"sourceType":"module"}