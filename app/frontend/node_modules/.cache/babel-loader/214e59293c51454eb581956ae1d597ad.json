{"ast":null,"code":"module.exports = function (directory, recursive, regExp) {\n  var dir = require('node-dir');\n\n  var path = require('path'); // Assume absolute path by default\n\n\n  var basepath = directory;\n\n  if (directory[0] === '.') {\n    // Relative path\n    basepath = path.join(__dirname, directory);\n  } else if (!path.isAbsolute(directory)) {\n    // Module path\n    basepath = require.resolve(directory);\n  }\n\n  var keys = dir.files(basepath, {\n    sync: true,\n    recursive: recursive || false\n  }).filter(function (file) {\n    return file.match(regExp || /\\.(json|js)$/);\n  }).map(function (file) {\n    return path.join('.', file.slice(basepath.length + 1));\n  });\n\n  var context = function (key) {\n    return require(context.resolve(key));\n  };\n\n  context.resolve = function (key) {\n    return path.join(directory, key);\n  };\n\n  context.keys = function () {\n    return keys;\n  };\n\n  return context;\n};","map":{"version":3,"names":["module","exports","directory","recursive","regExp","dir","require","path","basepath","join","__dirname","isAbsolute","resolve","keys","files","sync","filter","file","match","map","slice","length","context","key"],"sources":["/Users/Paul_1/node_modules/require-context/index.js"],"sourcesContent":["module.exports = function(directory, recursive, regExp) {\n  var dir = require('node-dir')\n  var path = require('path')\n\n  // Assume absolute path by default\n  var basepath = directory\n\n  if (directory[0] === '.') {\n    // Relative path\n    basepath = path.join(__dirname, directory)\n  } else if (!path.isAbsolute(directory)) {\n    // Module path\n    basepath = require.resolve(directory)\n  }\n\n  var keys = dir\n    .files(basepath, {\n      sync: true,\n      recursive: recursive || false\n    })\n    .filter(function(file) {\n      return file.match(regExp || /\\.(json|js)$/)\n    })\n    .map(function(file) {\n      return path.join('.', file.slice(basepath.length + 1))\n    })\n\n  var context = function(key) {\n    return require(context.resolve(key))\n  }\n\n  context.resolve = function(key) {\n    return path.join(directory, key)\n  }\n\n  context.keys = function() {\n    return keys\n  }\n\n  return context\n}\n"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAASC,SAAT,EAAoBC,SAApB,EAA+BC,MAA/B,EAAuC;EACtD,IAAIC,GAAG,GAAGC,OAAO,CAAC,UAAD,CAAjB;;EACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB,CAFsD,CAItD;;;EACA,IAAIE,QAAQ,GAAGN,SAAf;;EAEA,IAAIA,SAAS,CAAC,CAAD,CAAT,KAAiB,GAArB,EAA0B;IACxB;IACAM,QAAQ,GAAGD,IAAI,CAACE,IAAL,CAAUC,SAAV,EAAqBR,SAArB,CAAX;EACD,CAHD,MAGO,IAAI,CAACK,IAAI,CAACI,UAAL,CAAgBT,SAAhB,CAAL,EAAiC;IACtC;IACAM,QAAQ,GAAGF,OAAO,CAACM,OAAR,CAAgBV,SAAhB,CAAX;EACD;;EAED,IAAIW,IAAI,GAAGR,GAAG,CACXS,KADQ,CACFN,QADE,EACQ;IACfO,IAAI,EAAE,IADS;IAEfZ,SAAS,EAAEA,SAAS,IAAI;EAFT,CADR,EAKRa,MALQ,CAKD,UAASC,IAAT,EAAe;IACrB,OAAOA,IAAI,CAACC,KAAL,CAAWd,MAAM,IAAI,cAArB,CAAP;EACD,CAPQ,EAQRe,GARQ,CAQJ,UAASF,IAAT,EAAe;IAClB,OAAOV,IAAI,CAACE,IAAL,CAAU,GAAV,EAAeQ,IAAI,CAACG,KAAL,CAAWZ,QAAQ,CAACa,MAAT,GAAkB,CAA7B,CAAf,CAAP;EACD,CAVQ,CAAX;;EAYA,IAAIC,OAAO,GAAG,UAASC,GAAT,EAAc;IAC1B,OAAOjB,OAAO,CAACgB,OAAO,CAACV,OAAR,CAAgBW,GAAhB,CAAD,CAAd;EACD,CAFD;;EAIAD,OAAO,CAACV,OAAR,GAAkB,UAASW,GAAT,EAAc;IAC9B,OAAOhB,IAAI,CAACE,IAAL,CAAUP,SAAV,EAAqBqB,GAArB,CAAP;EACD,CAFD;;EAIAD,OAAO,CAACT,IAAR,GAAe,YAAW;IACxB,OAAOA,IAAP;EACD,CAFD;;EAIA,OAAOS,OAAP;AACD,CAxCD"},"metadata":{},"sourceType":"script"}