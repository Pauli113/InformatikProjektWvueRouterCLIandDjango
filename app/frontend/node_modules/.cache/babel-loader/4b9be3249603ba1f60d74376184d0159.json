{"ast":null,"code":"//json file imports\nlet langs = require('../data/lang.js');\n\nlet assessmentMethods = require('../data/assessment.js');\n\nlet moduleTypes = require('../data/type.js');\n\nlet locations = require('../data/location.js');\n\nlet seasons = require('../data/season.js');\n\nlet status_file = require('../data/status.js');\n\nlet persons = require('../data/person.js');\n\nlet courses = require('../data/courses.js');\n\nexport default {\n  components: {},\n\n  data() {\n    return {\n      module_code: '',\n      module_title: '',\n      module_abbrev: '',\n      credit_points: '',\n      //language list\n      language: '',\n      lang_list: langs,\n      //assessment list\n      assessment_method: '',\n      assessment_method_list: assessmentMethods,\n      //module type list\n      module_type: '',\n      module_types_list: moduleTypes,\n      //location\n      location: '',\n      location_list: locations,\n      //season\n      season: '',\n      seasons_list: seasons,\n      //status\n      status: '',\n      status_list: status_file,\n      duration_of_module: '',\n      recommended_semester: '',\n      //person\n      searchPerson: '',\n      coordinator: [],\n      person_list: persons,\n      lecturers: [],\n      workload: '',\n      lecture: '',\n      seminar: '',\n      practical: '',\n      self_study: '',\n      //courses\n      recommended_prerequisites: [],\n      required_prerequisites: [],\n      course_list: courses,\n      po: '',\n      further_information: '',\n      frequency: ''\n    };\n  },\n\n  computed: {\n    filteredPerson() {\n      const query = this.searchPerson.toLowerCase();\n\n      if (this.searchPerson === \"\") {\n        return this.person_list;\n      }\n    }\n\n  },\n  methods: {\n    handleSubmit() {\n      alert(\"Modul hinzufügt bzw geändert\");\n    },\n\n    assignValues() {},\n\n    fillModuleArray() {}\n\n  }\n};","map":{"version":3,"mappings":"AAqSA;AACA,IAAIA,KAAI,GAAIC,OAAO,CAAC,iBAAD,CAAnB;;AACA,IAAIC,iBAAgB,GAAID,OAAO,CAAC,uBAAD,CAA/B;;AACA,IAAIE,WAAU,GAAIF,OAAO,CAAC,iBAAD,CAAzB;;AACA,IAAIG,SAAQ,GAAIH,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAII,OAAM,GAAIJ,OAAO,CAAC,mBAAD,CAArB;;AACA,IAAIK,WAAU,GAAIL,OAAO,CAAC,mBAAD,CAAzB;;AACA,IAAIM,OAAM,GAAIN,OAAO,CAAC,mBAAD,CAArB;;AACA,IAAIO,OAAM,GAAIP,OAAO,CAAC,oBAAD,CAArB;;AACA,eAAe;EACXQ,UAAU,EAAC,EADA;;EAIXC,IAAI,GAAE;IACF,OAAM;MACFC,WAAW,EAAC,EADV;MAEFC,YAAY,EAAC,EAFX;MAGFC,aAAa,EAAC,EAHZ;MAIFC,aAAa,EAAC,EAJZ;MAKF;MACAC,QAAQ,EAAC,EANP;MAOFC,SAAS,EAAEhB,KAPT;MAQF;MACAiB,iBAAiB,EAAC,EAThB;MAUFC,sBAAsB,EAAEhB,iBAVtB;MAWF;MACAiB,WAAW,EAAC,EAZV;MAaFC,iBAAiB,EAAEjB,WAbjB;MAcF;MACAkB,QAAQ,EAAC,EAfP;MAgBFC,aAAa,EAAElB,SAhBb;MAiBF;MACAmB,MAAM,EAAC,EAlBL;MAmBFC,YAAY,EAAEnB,OAnBZ;MAoBF;MACAoB,MAAM,EAAC,EArBL;MAsBFC,WAAW,EAAEpB,WAtBX;MAuBFqB,kBAAkB,EAAC,EAvBjB;MAwBFC,oBAAoB,EAAC,EAxBnB;MAyBF;MACAC,YAAY,EAAC,EA1BX;MA2BFC,WAAW,EAAE,EA3BX;MA4BFC,WAAW,EAAExB,OA5BX;MA6BFyB,SAAS,EAAC,EA7BR;MA8BFC,QAAQ,EAAC,EA9BP;MA+BFC,OAAO,EAAC,EA/BN;MAgCFC,OAAO,EAAC,EAhCN;MAiCFC,SAAS,EAAC,EAjCR;MAkCFC,UAAU,EAAC,EAlCT;MAmCF;MACAC,yBAAyB,EAAC,EApCxB;MAqCFC,sBAAsB,EAAC,EArCrB;MAsCFC,WAAW,EAAEhC,OAtCX;MAuCFiC,EAAE,EAAC,EAvCD;MAwCFC,mBAAmB,EAAC,EAxClB;MAyCFC,SAAS,EAAC;IAzCR,CAAN;EA4CH,CAjDU;;EAmDXC,QAAQ,EAAC;IACLC,cAAc,GAAE;MACZ,MAAMC,KAAI,GAAI,KAAKjB,YAAL,CAAkBkB,WAAlB,EAAd;;MACA,IAAG,KAAKlB,YAAL,KAAoB,EAAvB,EAA0B;QACtB,OAAO,KAAKE,WAAZ;MACJ;IACJ;;EANK,CAnDE;EA2DXiB,OAAO,EAAC;IACJC,YAAY,GAAE;MACVC,KAAK,CAAC,8BAAD,CAAL;IAGH,CALG;;IAMJC,YAAY,GAAE,CAEb,CARG;;IASJC,eAAe,GAAE,CAEjB;;EAXI;AA3DG,CAAf","names":["langs","require","assessmentMethods","moduleTypes","locations","seasons","status_file","persons","courses","components","data","module_code","module_title","module_abbrev","credit_points","language","lang_list","assessment_method","assessment_method_list","module_type","module_types_list","location","location_list","season","seasons_list","status","status_list","duration_of_module","recommended_semester","searchPerson","coordinator","person_list","lecturers","workload","lecture","seminar","practical","self_study","recommended_prerequisites","required_prerequisites","course_list","po","further_information","frequency","computed","filteredPerson","query","toLowerCase","methods","handleSubmit","alert","assignValues","fillModuleArray"],"sourceRoot":"","sources":["/Users/Paul_1/Desktop/Th/Projekte/Informatikprojekt/InformatikprojektWvueCLI&Router/app/frontend/src/components/ModuleForm.vue"],"sourcesContent":["<!--\n\n\n<template>\n    <div class=\"moduleForm\">\n    <form @submit.prevent=\"handleSubmit()\">\n            <CostumInput \n            v-for=\"(input,i) in inputs\"\n            :key=\"i\"\n            v-model=\"input.value\" \n            :label=\"input.label\"\n            :type=\"input.type\"\n            />\n            <button>Modul hinzufügen bzw ändern</button>\n    </form> \n    </div> \n</template>  \n\n<script>\n\nimport CostumInput from './CustomInput.vue'\nimport moduleInputs from '../variables'\n\nexport default {\n  watch: {\n  },\n  name: 'HelloWorld',\n  props: {\n  },\n  components:{\n      CostumInput\n  },\n  data(){\n      return {\n            inputs: [\n                {\n                    label: 'module_code',\n                    value: '',\n                    type: 'module_code'\n                },\n                {\n                    label: 'module_title',\n                    value: '',\n                    type: 'module_title'\n                },\n                {\n                    label: 'module_abbrev',\n                    value: '',\n                    type: 'module_abbrev'\n                },\n                {\n                    label: 'module_type',\n                    value: '',\n                    type: 'module_type'\n                },\n                {\n                    label: 'credit_points',\n                    value: '',\n                    type: 'credit_points'\n                },\n                {\n                    label: 'language',\n                    value: '',\n                    type: 'language'\n                },\n                {\n                    label: 'duration_of_module',\n                    value: '',\n                    type: 'duration_of_module'\n                },\n                {\n                    label: 'recommended_semester',\n                    value: '',\n                    type: 'recommended_semester'\n                },\n                {\n                    label: 'coordinator',\n                    value: '',\n                    type: 'coordinator'\n                },\n                {\n                    label: 'lecturers',\n                    value: '',\n                    type: 'lecturers'\n                },\n                {\n                    label: 'assessment-methods',\n                    value: '',\n                    type: 'assessment-methods'\n                },\n                {\n                    label: 'workload',\n                    value: '',\n                    type: 'workload'\n                },\n                {\n                    label: 'lecture',\n                    value: '',\n                    type: 'lecture'\n                },\n                {\n                    label: 'seminar',\n                    value: '',\n                    type: 'seminar'\n                },\n                {\n                    label: 'practical',\n                    value: '',\n                    type: 'practical'\n                },\n                {\n                    label: 'exercise',\n                    value: '',\n                    type: 'exercise'\n                },\n                {\n                    label: 'self_study',\n                    value: '',\n                    type: 'self_study'\n                },\n                {\n                    label: 'recommended-prerequisites',\n                    value: '',\n                    type: 'recommended-prerequisites'\n                },\n                {\n                    label: 'status',\n                    value: '',\n                    type: 'status'\n                },\n                {\n                    label: 'location',\n                    value:'',\n                    type:'location'\n                },\n                {\n                    label: 'po',\n                    value: '',\n                    type: 'po'\n                },\n                {\n                    label: 'furtherInformation',\n                    value:'',\n                    type:'furtherInformation'\n                }\n\n            ]\n      }\n  },\n  methods:{\n      handleSubmit(){\n\n            for(let i=0;i<this.inputs.length;i++)\n            {\n                console.log(this.inputs[i].value)\n                moduleInputs.push(this.inputs[i].label,this.inputs[i].value)\n\n            }\n            console.log(moduleInputs)\n            this.moduleToString()\n\n\n               alert(\"Modul hinzufügt bzw geändert\")\n\n        },\n        moduleToString(){\n           const jsonString = JSON.stringify(moduleInputs)\n\n            console.log(\"Json:\")\n            console.log(jsonString)\n            return jsonString\n        }\n  }\n}\n</script>\n-->\n\n<template>\n    <form>\n        <label>module_code</label>\n        <input type=\"module_code\" v-model=\"module_code\">\n\n        <label>module_title</label>\n        <input type=\"module_title\" v-model=\"module_title\">\n\n        <label>module_abbrev</label>\n        <input type=\"module_abbrev\" v-model=\"module_abbrev\">\n\n        <label>module_type</label>\n        <select v-model=\"module_type\">\n            <option :value=\"type.type\" v-for=\"(type) in module_types_list\" :key=\"type.type\">{{type.type}}</option>\n        </select>\n\n        <label>credit_points</label>\n        <input type=\"credit_points\" v-model=\"credit_points\">\n\n        <label>language</label>\n        <select v-model=\"language\">\n            <option :value=\"lang.lang\" v-for=\"(lang) in lang_list\" :key=\"lang.lang\">{{lang.lang}}</option>\n        </select>\n        \n\n        <label>duration_of_module</label>\n        <input type=\"duration_of_module\" v-model=\"duration_of_module\">\n\n        <label>recommended_semester</label>\n        <select v-model=\"recommended_semester\">\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n            <option value=\"5\">5</option>\n            <option value=\"6\">6</option>\n        </select>\n        \n        <label>frequency</label>\n        <select v-model=\"frequency\">\n            <option :value=\"season.season\" v-for=\"(season) in seasons_list\" :key=\"season.season\">{{season.season}}</option>\n        </select>\n\n        \n     \n        <p>responsibilities</p>\n        <label>coordinator</label>\n        <select multiple v-model=\"coordinator\">\n            <option :value=\"person.person\" v-for=\"(person) in person_list\" :key=\"person.person\">{{person.person}}</option>\n        </select>\n\n        <label>lecturers</label>\n        <select multiple v-model=\"lecturers\">\n            <option :value=\"person.person\" v-for=\"(person) in person_list\" :key=\"person.person\">{{person.person}}</option>\n        </select>\n        <pre>{{lecturers}}</pre>\n        \n        <label>assessment_method</label>\n        <select v-model=\"assessment_method\">\n            <option :value=\"assessment.assessment\" v-for=\"(assessment) in assessment_method_list\" :key=\"assessment.assessment\">{{assessment.assessment}}</option>\n        </select>\n       \n\n        <label>workload</label>\n        <input type=\"workload\" v-model=\"workload\">\n\n        <label>lecture</label>\n        <input type=\"lecture\" v-model=\"lecture\">\n\n        <label>seminar</label>\n        <input type=\"seminar\" v-model=\"seminar\">\n\n        <label>practical</label>\n        <input type=\"practical\" v-model=\"practical\">\n\n        <label>self_study</label>\n        <input type=\"self_study\" v-model=\"self_study\">\n\n        <label>recommended_prerequisites</label>\n        <select v-model=\"recommended_prerequisites\">\n            <option :value=\"courses.courses\" v-for=\"(courses) in course_list\" :key=\"courses.course\">{{courses.course}}</option>\n        </select>\n\n        <label>required_prerequisites</label>\n        <select v-model=\"required_prerequisites\">\n            <option :value=\"courses.courses\" v-for=\"(courses) in course_list\" :key=\"courses.course\">{{courses.course}}</option>\n        </select>\n\n        <label>status</label>\n        <select v-model=\"status\">\n            <option :value=\"status.status\" v-for=\"(status) in status_list\" :key=\"status.status\">{{status.status}}</option>\n        </select>\n\n        <label>location</label>\n        <select v-model=\"location\">\n            <option :value=\"location.location\" v-for=\"(location) in location_list\" :key=\"location.location\">{{location.location}}</option>\n        </select>\n\n        <label>po</label>\n        <select v-model=\"po\">\n            <option value=\"1\">PO1</option>\n            <option value=\"2\">PO2</option>\n        </select>\n\n        <label>furtherInformation</label>\n        <input type=\"further_information\" v-model=\"further_information\" id=\"furtherInformation\">\n\n\n        <button @click.prevent=\"handleSubmit\" >Modul hinzufügen bzw ändern</button>\n    </form>\n    \n    \n</template>\n\n<script>\n\n//json file imports\nlet langs = require('../data/lang.js')\nlet assessmentMethods = require('../data/assessment.js')\nlet moduleTypes = require('../data/type.js')\nlet locations = require('../data/location.js')\nlet seasons = require('../data/season.js')\nlet status_file = require('../data/status.js')\nlet persons = require('../data/person.js')\nlet courses = require('../data/courses.js')\nexport default {\n    components:{\n             \n    },\n    data(){\n        return{\n            module_code:'',\n            module_title:'',\n            module_abbrev:'',\n            credit_points:'',\n            //language list\n            language:'',\n            lang_list: langs,\n            //assessment list\n            assessment_method:'',\n            assessment_method_list: assessmentMethods,\n            //module type list\n            module_type:'',\n            module_types_list: moduleTypes,\n            //location\n            location:'',\n            location_list: locations,\n            //season\n            season:'',\n            seasons_list: seasons,\n            //status\n            status:'',\n            status_list: status_file,\n            duration_of_module:'',\n            recommended_semester:'',\n            //person\n            searchPerson:'',\n            coordinator: [],\n            person_list: persons,\n            lecturers:[],\n            workload:'',\n            lecture:'',\n            seminar:'',\n            practical:'',\n            self_study:'',\n            //courses\n            recommended_prerequisites:[],\n            required_prerequisites:[],\n            course_list: courses,\n            po:'',\n            further_information:'',\n            frequency:''\n        }\n\n    },\n\n    computed:{\n        filteredPerson(){\n            const query = this.searchPerson.toLowerCase()\n            if(this.searchPerson===\"\"){\n                return this.person_list\n            }\n        }\n    },\n    methods:{\n        handleSubmit(){\n            alert(\"Modul hinzufügt bzw geändert\")\n         \n            \n        },\n        assignValues(){\n            \n        },\n        fillModuleArray(){\n            \n        }\n    }\n    \n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n\ninput {\n    margin: 10px;\n    display: block;\n    border-radius: 7px;\n    width: 100%;\n}\n\nselect{\n     margin: 10px;\n    display: block;\n    border-radius: 7px;\n    width: 100%;\n}\n\n#furtherInformation{\n        height: 50px;\n}\n\n\n</style>\n"]},"metadata":{},"sourceType":"module"}