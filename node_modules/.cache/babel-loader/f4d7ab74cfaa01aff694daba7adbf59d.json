{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Alle Kurse\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.courses, course => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: course.id\n    }, [_createElementVNode(\"p\", null, _toDisplayString(course.id), 1\n    /* TEXT */\n    )]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createCommentVNode(\"\\n<table>\\n  <thead>\\n    <tr>\\n      <td>Kurse</td>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr v-for=\\\"(course,index) in courses\\\" :key=\\\"index\\\">\\n    </tr>\\n\\n  </tbody>\\n </table>\\n  \")], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCACEA,oBAAmB,IAAnB,EAAmB,IAAnB,EAAI,YAAJ,EAAc;AAAA;AAAd;;;6DAAAC,+BAEDC,oBAEOC,SAFP,EAEO,IAFP,EAEOC,YAFsCC,aAEtC,EAF4BC,MAAiB,IAAX;yBAAzCJ,oBAEO,KAFP,EAEO;MAFKK,GAAG,EAAED,MAAM,CAACE;IAEjB,CAFP,GACGR,oBAAoB,GAApB,EAAoB,IAApB,EAAoBS,iBAAfH,MAAM,CAACE,EAAQ,CAApB,EAAc;IAAA;IAAd,EADH;GAEO,CAFP;;EAAA,IAKCE","names":["_createElementVNode","_hoisted_1","_createElementBlock","_Fragment","_renderList","$data","course","key","id","_toDisplayString","_createCommentVNode"],"sourceRoot":"","sources":["/Users/Paul_1/Desktop/Th/Projekte/Informatikprojekt/InformatikprojektWvueCLI&Router/app/frontend/src/components/MyCourses.vue"],"sourcesContent":["<template>\n  <h1>Alle Kurse</h1>\n\n <div v-bind:key=\"course.id\" v-for=\"course in courses\">\n    <p>{{course.id}}</p>\n  </div>\n  \n\n  <!--\n<table>\n  <thead>\n    <tr>\n      <td>Kurse</td>\n    </tr>\n  </thead>\n  <tbody>\n    <tr v-for=\"(course,index) in courses\" :key=\"index\">\n    </tr>\n\n  </tbody>\n </table>\n  -->\n \n</template>\n\n<script>\nimport axios from 'axios';\n\n  export default{\n  \n    data(){\n      return {\n        courses:[],\n        query:''\n      }\n    },\n    beforeCreate() {\n        axios.get(\"http://localhost:8000/api/courses/\")\n        .then(res => (this.courses.push(res.data)))\n        .catch(err => console.log(err))\n        console.log(this.courses)\n    }\n\n\n\n   \n  }\n</script>"]},"metadata":{},"sourceType":"module"}