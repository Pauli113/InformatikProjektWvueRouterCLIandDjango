{"ast":null,"code":"// Generated by CoffeeScript 1.12.4\nvar Dumper, Inline, Utils;\nUtils = require('./Utils');\nInline = require('./Inline');\n\nDumper = function () {\n  function Dumper() {}\n\n  Dumper.indentation = 4;\n\n  Dumper.prototype.dump = function (input, inline, indent, exceptionOnInvalidType, objectEncoder) {\n    var i, key, len, output, prefix, value, willBeInlined;\n\n    if (inline == null) {\n      inline = 0;\n    }\n\n    if (indent == null) {\n      indent = 0;\n    }\n\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n\n    if (objectEncoder == null) {\n      objectEncoder = null;\n    }\n\n    output = '';\n    prefix = indent ? Utils.strRepeat(' ', indent) : '';\n\n    if (inline <= 0 || typeof input !== 'object' || input instanceof Date || Utils.isEmpty(input)) {\n      output += prefix + Inline.dump(input, exceptionOnInvalidType, objectEncoder);\n    } else {\n      if (input instanceof Array) {\n        for (i = 0, len = input.length; i < len; i++) {\n          value = input[i];\n          willBeInlined = inline - 1 <= 0 || typeof value !== 'object' || Utils.isEmpty(value);\n          output += prefix + '-' + (willBeInlined ? ' ' : \"\\n\") + this.dump(value, inline - 1, willBeInlined ? 0 : indent + this.indentation, exceptionOnInvalidType, objectEncoder) + (willBeInlined ? \"\\n\" : '');\n        }\n      } else {\n        for (key in input) {\n          value = input[key];\n          willBeInlined = inline - 1 <= 0 || typeof value !== 'object' || Utils.isEmpty(value);\n          output += prefix + Inline.dump(key, exceptionOnInvalidType, objectEncoder) + ':' + (willBeInlined ? ' ' : \"\\n\") + this.dump(value, inline - 1, willBeInlined ? 0 : indent + this.indentation, exceptionOnInvalidType, objectEncoder) + (willBeInlined ? \"\\n\" : '');\n        }\n      }\n    }\n\n    return output;\n  };\n\n  return Dumper;\n}();\n\nmodule.exports = Dumper;","map":{"version":3,"names":["Dumper","Inline","Utils","require","indentation","prototype","dump","input","inline","indent","exceptionOnInvalidType","objectEncoder","i","key","len","output","prefix","value","willBeInlined","strRepeat","Date","isEmpty","Array","length","module","exports"],"sources":["/Users/Paul_1/node_modules/yamljs/lib/Dumper.js"],"sourcesContent":["// Generated by CoffeeScript 1.12.4\nvar Dumper, Inline, Utils;\n\nUtils = require('./Utils');\n\nInline = require('./Inline');\n\nDumper = (function() {\n  function Dumper() {}\n\n  Dumper.indentation = 4;\n\n  Dumper.prototype.dump = function(input, inline, indent, exceptionOnInvalidType, objectEncoder) {\n    var i, key, len, output, prefix, value, willBeInlined;\n    if (inline == null) {\n      inline = 0;\n    }\n    if (indent == null) {\n      indent = 0;\n    }\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectEncoder == null) {\n      objectEncoder = null;\n    }\n    output = '';\n    prefix = (indent ? Utils.strRepeat(' ', indent) : '');\n    if (inline <= 0 || typeof input !== 'object' || input instanceof Date || Utils.isEmpty(input)) {\n      output += prefix + Inline.dump(input, exceptionOnInvalidType, objectEncoder);\n    } else {\n      if (input instanceof Array) {\n        for (i = 0, len = input.length; i < len; i++) {\n          value = input[i];\n          willBeInlined = inline - 1 <= 0 || typeof value !== 'object' || Utils.isEmpty(value);\n          output += prefix + '-' + (willBeInlined ? ' ' : \"\\n\") + this.dump(value, inline - 1, (willBeInlined ? 0 : indent + this.indentation), exceptionOnInvalidType, objectEncoder) + (willBeInlined ? \"\\n\" : '');\n        }\n      } else {\n        for (key in input) {\n          value = input[key];\n          willBeInlined = inline - 1 <= 0 || typeof value !== 'object' || Utils.isEmpty(value);\n          output += prefix + Inline.dump(key, exceptionOnInvalidType, objectEncoder) + ':' + (willBeInlined ? ' ' : \"\\n\") + this.dump(value, inline - 1, (willBeInlined ? 0 : indent + this.indentation), exceptionOnInvalidType, objectEncoder) + (willBeInlined ? \"\\n\" : '');\n        }\n      }\n    }\n    return output;\n  };\n\n  return Dumper;\n\n})();\n\nmodule.exports = Dumper;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}