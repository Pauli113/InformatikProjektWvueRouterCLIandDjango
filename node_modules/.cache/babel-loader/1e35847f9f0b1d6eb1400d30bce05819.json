{"ast":null,"code":"// Generated by CoffeeScript 1.12.4\nvar Pattern;\n\nPattern = function () {\n  Pattern.prototype.regex = null;\n  Pattern.prototype.rawRegex = null;\n  Pattern.prototype.cleanedRegex = null;\n  Pattern.prototype.mapping = null;\n\n  function Pattern(rawRegex, modifiers) {\n    var _char, capturingBracketNumber, cleanedRegex, i, len, mapping, name, part, subChar;\n\n    if (modifiers == null) {\n      modifiers = '';\n    }\n\n    cleanedRegex = '';\n    len = rawRegex.length;\n    mapping = null;\n    capturingBracketNumber = 0;\n    i = 0;\n\n    while (i < len) {\n      _char = rawRegex.charAt(i);\n\n      if (_char === '\\\\') {\n        cleanedRegex += rawRegex.slice(i, +(i + 1) + 1 || 9e9);\n        i++;\n      } else if (_char === '(') {\n        if (i < len - 2) {\n          part = rawRegex.slice(i, +(i + 2) + 1 || 9e9);\n\n          if (part === '(?:') {\n            i += 2;\n            cleanedRegex += part;\n          } else if (part === '(?<') {\n            capturingBracketNumber++;\n            i += 2;\n            name = '';\n\n            while (i + 1 < len) {\n              subChar = rawRegex.charAt(i + 1);\n\n              if (subChar === '>') {\n                cleanedRegex += '(';\n                i++;\n\n                if (name.length > 0) {\n                  if (mapping == null) {\n                    mapping = {};\n                  }\n\n                  mapping[name] = capturingBracketNumber;\n                }\n\n                break;\n              } else {\n                name += subChar;\n              }\n\n              i++;\n            }\n          } else {\n            cleanedRegex += _char;\n            capturingBracketNumber++;\n          }\n        } else {\n          cleanedRegex += _char;\n        }\n      } else {\n        cleanedRegex += _char;\n      }\n\n      i++;\n    }\n\n    this.rawRegex = rawRegex;\n    this.cleanedRegex = cleanedRegex;\n    this.regex = new RegExp(this.cleanedRegex, 'g' + modifiers.replace('g', ''));\n    this.mapping = mapping;\n  }\n\n  Pattern.prototype.exec = function (str) {\n    var index, matches, name, ref;\n    this.regex.lastIndex = 0;\n    matches = this.regex.exec(str);\n\n    if (matches == null) {\n      return null;\n    }\n\n    if (this.mapping != null) {\n      ref = this.mapping;\n\n      for (name in ref) {\n        index = ref[name];\n        matches[name] = matches[index];\n      }\n    }\n\n    return matches;\n  };\n\n  Pattern.prototype.test = function (str) {\n    this.regex.lastIndex = 0;\n    return this.regex.test(str);\n  };\n\n  Pattern.prototype.replace = function (str, replacement) {\n    this.regex.lastIndex = 0;\n    return str.replace(this.regex, replacement);\n  };\n\n  Pattern.prototype.replaceAll = function (str, replacement, limit) {\n    var count;\n\n    if (limit == null) {\n      limit = 0;\n    }\n\n    this.regex.lastIndex = 0;\n    count = 0;\n\n    while (this.regex.test(str) && (limit === 0 || count < limit)) {\n      this.regex.lastIndex = 0;\n      str = str.replace(this.regex, replacement);\n      count++;\n    }\n\n    return [str, count];\n  };\n\n  return Pattern;\n}();\n\nmodule.exports = Pattern;","map":{"version":3,"names":["Pattern","prototype","regex","rawRegex","cleanedRegex","mapping","modifiers","_char","capturingBracketNumber","i","len","name","part","subChar","length","charAt","slice","RegExp","replace","exec","str","index","matches","ref","lastIndex","test","replacement","replaceAll","limit","count","module","exports"],"sources":["/Users/Paul_1/node_modules/yamljs/lib/Pattern.js"],"sourcesContent":["// Generated by CoffeeScript 1.12.4\nvar Pattern;\n\nPattern = (function() {\n  Pattern.prototype.regex = null;\n\n  Pattern.prototype.rawRegex = null;\n\n  Pattern.prototype.cleanedRegex = null;\n\n  Pattern.prototype.mapping = null;\n\n  function Pattern(rawRegex, modifiers) {\n    var _char, capturingBracketNumber, cleanedRegex, i, len, mapping, name, part, subChar;\n    if (modifiers == null) {\n      modifiers = '';\n    }\n    cleanedRegex = '';\n    len = rawRegex.length;\n    mapping = null;\n    capturingBracketNumber = 0;\n    i = 0;\n    while (i < len) {\n      _char = rawRegex.charAt(i);\n      if (_char === '\\\\') {\n        cleanedRegex += rawRegex.slice(i, +(i + 1) + 1 || 9e9);\n        i++;\n      } else if (_char === '(') {\n        if (i < len - 2) {\n          part = rawRegex.slice(i, +(i + 2) + 1 || 9e9);\n          if (part === '(?:') {\n            i += 2;\n            cleanedRegex += part;\n          } else if (part === '(?<') {\n            capturingBracketNumber++;\n            i += 2;\n            name = '';\n            while (i + 1 < len) {\n              subChar = rawRegex.charAt(i + 1);\n              if (subChar === '>') {\n                cleanedRegex += '(';\n                i++;\n                if (name.length > 0) {\n                  if (mapping == null) {\n                    mapping = {};\n                  }\n                  mapping[name] = capturingBracketNumber;\n                }\n                break;\n              } else {\n                name += subChar;\n              }\n              i++;\n            }\n          } else {\n            cleanedRegex += _char;\n            capturingBracketNumber++;\n          }\n        } else {\n          cleanedRegex += _char;\n        }\n      } else {\n        cleanedRegex += _char;\n      }\n      i++;\n    }\n    this.rawRegex = rawRegex;\n    this.cleanedRegex = cleanedRegex;\n    this.regex = new RegExp(this.cleanedRegex, 'g' + modifiers.replace('g', ''));\n    this.mapping = mapping;\n  }\n\n  Pattern.prototype.exec = function(str) {\n    var index, matches, name, ref;\n    this.regex.lastIndex = 0;\n    matches = this.regex.exec(str);\n    if (matches == null) {\n      return null;\n    }\n    if (this.mapping != null) {\n      ref = this.mapping;\n      for (name in ref) {\n        index = ref[name];\n        matches[name] = matches[index];\n      }\n    }\n    return matches;\n  };\n\n  Pattern.prototype.test = function(str) {\n    this.regex.lastIndex = 0;\n    return this.regex.test(str);\n  };\n\n  Pattern.prototype.replace = function(str, replacement) {\n    this.regex.lastIndex = 0;\n    return str.replace(this.regex, replacement);\n  };\n\n  Pattern.prototype.replaceAll = function(str, replacement, limit) {\n    var count;\n    if (limit == null) {\n      limit = 0;\n    }\n    this.regex.lastIndex = 0;\n    count = 0;\n    while (this.regex.test(str) && (limit === 0 || count < limit)) {\n      this.regex.lastIndex = 0;\n      str = str.replace(this.regex, replacement);\n      count++;\n    }\n    return [str, count];\n  };\n\n  return Pattern;\n\n})();\n\nmodule.exports = Pattern;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}